[tool.poetry]
# required ones
name = "geoips_tropics"  # package available at the root of the project
version = "0.0.0"      # 0.0.0 will be auto-updated with poetry dynamic versioning!
description = "TROPICS GeoIPS Plugin Package"
authors = ["GeoIPS <geoips@nrlmry.navy.mil>"]

# optional ones
maintainers = ["GeoIPS <geoips@nrlmry.navy.mil>"]
#homepage = "set the url"   // optional
repository = "https://github.com/NRLMMD-GEOIPS/geoips_tropics" #optional
#documentation = "set the url"      // optional
#license = {file = "LICENSE"}   // required
readme = "README.md"
keywords = ["GeoIPS", "Poetry"]
packages = [
    { include = "geoips_tropics" },
] # not needed as tool.poetry.name is properly set already
classifiers = [ # // list of PyPI trove classifiers to describe the project
    "Programming Language :: Python :: 3",
]
include = ["**/*.txt", "**/*.py", "**/*.yaml"]

# uses current version .postN and not incrementing
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
metadata = false # don't include local-version hash; date doesn't appear by deafult
style = "pep440" # pep440 is deafult; can rmeove later on; used for : keeping 0.0.8 as the default install until 0.0.9 is out
#style = "semver"
#tag-branch = "feature-poetry"
strict = false
pattern = "(?x)^((?P<epoch>\\d+)!)?(?P<base>\\d+(\\.\\d+)*)([-._]?((?P<stage>[a-zA-Z]+)[-._]?(?P<revision>\\d+)?))?(\\+(?P<tagged_metadata>.+))?$"

# NOTE: You must CREATE a _version.py file and commit it via git!
#     That file will have 0.0.0 as the version - which will get updated when
#     pip installed.
# FURTHER NOTE: pip install -e will actually NOT update _version.py.
#     if you must have a valid version in your local editable install (which
#     is typically not necessary), you can manually update _version.py
#     with the following steps:
#     > pip install poetry-dynamic-versioning
#     > poetry-dynamic-versioning
#     (those steps are called automatically when running pip install, but
#     NOT when running pip install -e)
[tool.poetry-dynamic-versioning.substitution]
files = ["*/_version.py"]

# This is where you would specify a pre-build script from pyproject.toml/poetry.
# [tool.poetry.build]
# generate-setup-file = false  # I have no idea what this does
# script = prebuild.py  # This gets called as a python script prior to running build steps

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"                          # object used to perform the build process

[tool.poetry.plugins."geoips.plugin_packages"]
geoips_tropics= "geoips_tropics"
